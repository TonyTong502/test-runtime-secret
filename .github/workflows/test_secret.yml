name: test secret value at runtime

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v4
      # - name: set secret
      #   run: gh secret set MYSECRET --body "this is the value" --no-store
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      - run: |
          echo "${{env.my_secret}}"
          echo "::add-mask::$(echo '${{env.my_secret}}' | jq -r '.oauth.clientid')"
          echo "::add-mask::$(echo '${{env.my_secret}}' | jq -r '.oauth.clientsecret')"
          echo "CLIENT_ID=$(echo '${{env.my_secret}}' | jq -r '.oauth.clientid')" >> $GITHUB_ENV
          echo "CLIENT_SECRET=$(echo '${{env.my_secret}}' | jq -r '.oauth.clientsecret')" >> $GITHUB_ENV
          echo "CPI_HOST=$(echo "$(echo '${{env.my_secret}}' | jq -r '.oauth.url')" | awk -F'[/:]' '{print $4}')" >> $GITHUB_ENV
          echo "TOKEN_HOST=$(echo "$(echo '${{env.my_secret}}' | jq -r '.oauth.tokenurl')" | awk -F'[/:]' '{print $4}')" >> $GITHUB_ENV
        env:
          my_secret: |
            {
              "oauth": {
                  "clientid": "client_1",
                  "clientsecret": "client_secret_1",
                  "url": "https://url_host_1",
                  "createdate": "2022-05-25T08:24:32.005Z",
                  "tokenurl": "https://token_url_host_1"
              }
            }
      - run: |
          echo "${{env.CLIENT_ID}}"
          echo "${{env.CLIENT_SECRET}}"
          echo "${{env.CPI_HOST}}"
          echo "${{env.TOKEN_HOST}}"
